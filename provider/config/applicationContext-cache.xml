<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   		http://www.springframework.org/schema/beans/spring-beans.xsd
     	http://www.springframework.org/schema/cache
     	http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd">
    <bean id="cardone.bean.cache" class="top.cardone.cache.impl.CacheImpl" lazy-init="true">
        <property name="countUpperLimit" value="${app.countUpperLimit:500}"/>
        <property name="appGroupName" value="${app.group.name:cardone}"/>
        <property name="cacheManagerList">
            <list>
                <bean class="org.springframework.cache.caffeine.CaffeineCacheManager" lazy-init="true"/>
            </list>
        </property>
    </bean>

    <bean id="cardone.web.cache" class="top.cardone.cache.impl.CacheImpl" lazy-init="true">
        <property name="countUpperLimit" value="${app.countUpperLimit:500}"/>
        <property name="appGroupName" value="${app.group.name:cardone}"/>
        <property name="cacheManagerList">
            <list>
                <bean class="org.springframework.cache.caffeine.CaffeineCacheManager" lazy-init="true">
                    <property name="cacheSpecification" value="expireAfterWrite=300000s"/>
                </bean>
            </list>
        </property>
    </bean>

    <cache:annotation-driven cache-resolver="cardOneCacheResolver" key-generator="cardOneKeyGenerator"/>

    <bean id="cardOneKeyGenerator" class="top.cardone.cache.interceptor.CardOneKeyGenerator"/>

    <bean id="cardOneCacheResolver" class="top.cardone.cache.interceptor.CardOneCacheResolver">
        <property name="cacheManager" ref="top.cardone.cache.CardOneCacheManager"/>
    </bean>

    <bean id="top.cardone.cache.CardOneCacheManager"
          class="top.cardone.cache.impl.CardOneCacheManagerImpl" lazy-init="true">
        <property name="cache" ref="top.cardone.cache.Cache"/>
    </bean>

    <bean id="top.cardone.cache.Cache" class="top.cardone.cache.impl.CacheImpl" lazy-init="true">
        <property name="countUpperLimit" value="${app.countUpperLimit:500}"/>
        <property name="appGroupName" value="${app.group.name:cardone}"/>
        <property name="cacheManagerList">
            <list>
                <ref bean="org.springframework.cache.caffeine.CaffeineCacheManager"/>
                <ref bean="org.springframework.data.redis.cache.RedisCacheManager"/>
            </list>
        </property>
    </bean>

    <!-- caffeineCacheManager -->
    <bean id="org.springframework.cache.caffeine.CaffeineCacheManager"
          class="org.springframework.cache.caffeine.CaffeineCacheManager" lazy-init="true">
        <property name="cacheSpecification" value="expireAfterWrite=300s"/>
    </bean>

    <lang:groovy id="defaultCacheConfiguration">
        <lang:inline-script>
            <![CDATA[
            import org.springframework.data.redis.serializer.RedisSerializationContext

            RedisSerializationContext.SerializationPair<Object> serializeValuesWith = RedisSerializationContext.SerializationPair
                    .fromSerializer(new top.cardone.cache.serializer.FstRedisSerializer())


            org.springframework.data.redis.cache.RedisCacheConfiguration.defaultCacheConfig().
                    entryTtl(java.time.Duration.ofSeconds(18000L)).serializeValuesWith(serializeValuesWith)
            ]]>
        </lang:inline-script>
    </lang:groovy>

    <!-- redisCacheManager -->
    <bean id="org.springframework.data.redis.cache.RedisCacheManager"
          class="org.springframework.data.redis.cache.RedisCacheManager" lazy-init="true">
        <constructor-arg index="0">
            <bean class="org.springframework.data.redis.cache.DefaultRedisCacheWriter">
                <constructor-arg index="0" ref="lettuceConnectionFactory"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="defaultCacheConfiguration"/>
    </bean>
</beans>